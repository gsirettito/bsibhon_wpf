<Window x:Class="Psi3_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:SiretT.Converters"
        xmlns:local="clr-namespace:Psi3_WPF"
        mc:Ignorable="d"
        AllowsTransparency="True"
        WindowStyle="None"
        Title="bsibhon" Height="575" Width="400"
        BorderThickness="1"
        BorderBrush="{DynamicResource TextBoxBorderBrush}"
        ResizeMode="NoResize"
        Foreground="{DynamicResource Foreground}"
        FontFamily="/bsibhon;component/#Poppins Light" Mouse.MouseDown="titlebar_MouseDown">
    <Window.Resources>
        <conv:EqualsToFalseConverter x:Key="EqualsToFalse"/>
        <SolidColorBrush x:Key="Foreground" Color="#363636"/>
        <SolidColorBrush x:Key="PsiphonBrush" Color="#FFB83E1F"/>
        <SolidColorBrush x:Key="PsiphonDisconnectedBrush" Color="Gray"/>
        <SolidColorBrush x:Key="PsiphonConnectedBrush" Color="#FFB83E1F"/>
        <SolidColorBrush x:Key="unMinneableBrush" Color="#4bceb1"/>
        <SolidColorBrush x:Key="unMinneableSecondaryBrush" Color="#9ccabf"/>
        <SolidColorBrush x:Key="unMinneableButtonWarningBackgroundBrush" Color="#FFFFDD57"/>
        <SolidColorBrush x:Key="unMinneableButtonWarningHoverBrush" Color="#FFFFDB4A"/>
        <SolidColorBrush x:Key="unMinneableButtonWarningPressedBrush" Color="#FFFFD83D"/>
        <SolidColorBrush x:Key="unMinneableButtonWarningFocusBrush" Color="#3FE1DD57"/>
        <SolidColorBrush x:Key="unMinneableButtonWarningForegroundBrush" Color="#B2000000"/>

        <SolidColorBrush x:Key="unMinneableButtonSuccessBackgroundBrush" Color="#FF48C774"/>
        <SolidColorBrush x:Key="unMinneableButtonSuccessHoverBrush" Color="#FF3EC46D"/>
        <SolidColorBrush x:Key="unMinneableButtonSuccessPressedBrush" Color="#FF3ABB67"/>
        <SolidColorBrush x:Key="unMinneableButtonSuccessFocusBrush" Color="#3F48C774"/>
        <SolidColorBrush x:Key="unMinneableButtonSuccessForegroundBrush" Color="White"/>

        <SolidColorBrush x:Key="unMinneableNoteBrush" Color="#fffbec"/>

        <SolidColorBrush x:Key="ButtonBackground" Color="#FFECECF0"/>
        <SolidColorBrush x:Key="ButtonForeground" Color="#FF000000"/>
        <SolidColorBrush x:Key="ButtonBorderBrush" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ButtonHoverBackground" Color="#FFFDE9C6"/>
        <SolidColorBrush x:Key="ButtonHoverForeground" Color="#FF000000"/>
        <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="#FFD2A85E"/>
        <SolidColorBrush x:Key="ButtonDisableBackground" Color="#FFFBFBFB"/>
        <SolidColorBrush x:Key="ButtonDisableForeground" Color="#FFA8AEC3"/>
        <SolidColorBrush x:Key="ButtonDisableBorderBrush" Color="#FFCCCEDB"/>
        <SolidColorBrush x:Key="ButtonPressedBackground" Color="#FFD2A85E"/>
        <SolidColorBrush x:Key="ButtonPressedForeground" Color="#FFF"/>
        <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="#FFD2A85E"/>

        <SolidColorBrush x:Key="SeparatorBackground" Color="#FFDDDDDD"/>

        <SolidColorBrush x:Key="TextBoxBackground" Color="White"/>
        <SolidColorBrush x:Key="TextBoxForeground" Color="#FF363636"/>
        <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#dbdbdb"/>
        <SolidColorBrush x:Key="TextBoxFocusedBackground" Color="#FFFCFCFC"/>
        <SolidColorBrush x:Key="TextBoxFocusedForeground" Color="#FF363636"/>
        <SolidColorBrush x:Key="TextBoxFocusedBorderBrush" Color="#FF3273dc"/>
        <SolidColorBrush x:Key="TextBoxHoverBackground" Color="#FFFCFCFC"/>
        <SolidColorBrush x:Key="TextBoxHoverForeground" Color="#FF363636"/>
        <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="#FFb5b5b5"/>
        <SolidColorBrush x:Key="TextBoxDisableBackground" Color="#FFFBFBFB"/>
        <SolidColorBrush x:Key="TextBoxDisableForeground" Color="#FF7a7a7a"/>
        <SolidColorBrush x:Key="TextBoxDisableBorderBrush" Color="WhiteSmoke"/>

        <Style TargetType="{x:Type Bold}">
            <Setter Property="FontFamily" Value="/bsibhon;component/#Poppins Regular"/>
        </Style>

        <Style TargetType="{x:Type Hyperlink}">
            <Setter Property="TextDecorations" Value="{x:Null}"/>
        </Style>

        <Style x:Key="icon" TargetType="{x:Type Run}">
            <Setter Property="FontFamily" Value="/bsibhon;component/#Font Awesome 6 Pro Solid"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="ExtraBold"/>
        </Style>

        <Style TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{StaticResource SeparatorBackground}"/>
        </Style>

        <ControlTemplate x:Key="StandartButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="back"
                    CornerRadius="4"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
                <ContentControl x:Name="content"
                                Content="{TemplateBinding Content}"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>

                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="content" Property="Foreground" Value="{StaticResource ButtonDisableForeground}"/>
                    <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource ButtonDisableBorderBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template" Value="{StaticResource StandartButtonTemplate}"/>
        </Style>

        <Style x:Key="WarningButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource unMinneableButtonWarningBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource unMinneableButtonWarningForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template" Value="{StaticResource StandartButtonTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource unMinneableButtonWarningHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource unMinneableButtonWarningPressedBrush}"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="{Binding Color, Source={StaticResource unMinneableButtonWarningFocusBrush}}" ShadowDepth="0" BlurRadius="4"></DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SuccessButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource unMinneableButtonSuccessBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource unMinneableButtonSuccessForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template" Value="{StaticResource StandartButtonTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource unMinneableButtonSuccessHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource unMinneableButtonSuccessPressedBrush}"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="{Binding Color, Source={StaticResource unMinneableButtonSuccessFocusBrush}}" ShadowDepth="0" BlurRadius="4"></DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Height" Value="43"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="shadow" BorderThickness="3"
                                BorderBrush="White"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                ClipToBounds="True"
                                SnapsToDevicePixels="True">
                            <Border x:Name="back"
                                    Margin="-1"
                                    CornerRadius="4"
                                    Padding="5,2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="3" Color="#FFF3F3F3"/>
                                </Border.Effect>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              ClipToBounds="True"
                                          RenderOptions.ClearTypeHint="Enabled"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBorderBrush}"/>
                                <Setter TargetName="back" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="shadow" Property="BorderBrush" Value="#3F3273DC"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource TextBoxDisableForeground}"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource TextBoxDisableBorderBrush}"/>
                                <Setter TargetName="back" Property="Effect" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Height" Value="43"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="shadow" BorderThickness="3"
                                BorderBrush="White"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                ClipToBounds="True"
                                SnapsToDevicePixels="True">
                            <Border x:Name="back"
                                    Margin="-1"
                                    CornerRadius="4"
                                    Padding="5,2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="3" Color="#FFF3F3F3"/>
                                </Border.Effect>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              ClipToBounds="True"
                                          RenderOptions.ClearTypeHint="Enabled"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBorderBrush}"/>
                                <Setter TargetName="back" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="shadow" Property="BorderBrush" Value="#3F3273DC"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource TextBoxDisableForeground}"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource TextBoxDisableBorderBrush}"/>
                                <Setter TargetName="back" Property="Effect" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Border x:Name="border"
                                        Width="14" Height="14"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True">
                                    <Grid>
                                        <Path x:Name="CheckIcon"
                                              Width="7.5"
                                              Height="6.9"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M48.4375,110.4375 L51.4995,112.812 L56.3745,107.24883"
                                              Opacity="0"
                                              Stretch="Fill"
                                              Stroke="{StaticResource ButtonPressedForeground}"
                                              StrokeEndLineCap="Triangle"
                                              StrokeStartLineCap="Triangle"
                                              StrokeThickness="1.5" 
                                              SnapsToDevicePixels="True"/>
                                        <Rectangle x:Name="IndeterminateIcon"
                                                   Width="8"
                                                   Height="8"
                                                   Opacity="0"
                                                   Fill="{StaticResource ButtonPressedForeground}" />
                                        <Rectangle x:Name="DisabledVisualElement"
                                                   Fill="#FFA8AEC3"
                                                   Opacity="0"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ContentControl Grid.Column="1"
                                            IsTabStop="False"
                                            Margin="2,0,0,0"
                                            Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  RecognizesAccessKey="True" />
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonHoverBorderBrush}" />
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBackground}" />
                                <Setter TargetName="CheckIcon" Property="Stroke" Value="{StaticResource ButtonHoverForeground}" />
                                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{StaticResource ButtonHoverForeground}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                                <Setter TargetName="CheckIcon" Property="Stroke" Value="{StaticResource ButtonPressedForeground}" />
                                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{StaticResource ButtonPressedForeground}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckIcon" Property="Opacity" Value="1" />
                                <Setter Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                                <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="IndeterminateIcon" Property="Opacity" Value="1" />
                                <Setter Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                                <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value=".55" />
                                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value=".55" />
                                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{StaticResource ButtonDisableForeground}" />
                                <Setter TargetName="CheckIcon" Property="Stroke" Value="{StaticResource ButtonDisableForeground}" />
                                <Setter Property="BorderBrush" Value="{StaticResource ButtonDisableBorderBrush}" />
                                <Setter Property="Background" Value="{StaticResource ButtonDisableBackground}" />
                            </Trigger>
                            <Trigger Property="FlowDirection" Value="RightToLeft">
                                <Setter TargetName="CheckIcon" Property="LayoutTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="-1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="SelectedIndex" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel"
                                      Grid.Row="0"
                                      Panel.ZIndex="1"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1"
                                      Background="{StaticResource ButtonBackground}" Visibility="Collapsed"/>
                            <Border x:Name="Border"
                                    Grid.Row="1"
                                    Background="{TemplateBinding Background}"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2" >
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="0"
                                                  ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="7,2,8,2"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Accent}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="7,3,8,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Name="MainGrid" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup Name="PART_Popup"
                                       AllowsTransparency="true"
                                       Grid.ColumnSpan="2"
                                       Placement="Bottom"
                                       Margin="1"
                                       IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <Grid Margin="4"
                                          MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                                        <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2"/>
                                        <Border x:Name="DropDownBorder"
                                                Background="{DynamicResource TextBoxBackground}"
                                                BorderBrush="{DynamicResource TextBoxBorderBrush}"
                                                BorderThickness="1"
                                                Margin="0,-1,0,0">
                                            <!-- popup border thickness not dependent on BorderThickness property-->
                                            <ScrollViewer Name="DropDownScrollViewer">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle Name="OpaqueRect"
                                                                   Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
                                                                   Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
                                                                   Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                                    </Canvas>
                                                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <ToggleButton Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      Padding="0,0,0,10" BorderBrush="{x:Null}"/>
                                <local:FontAwesomeIcon x:Name="Arrow"
                                                       Grid.ColumnSpan="2"
                                                       Margin="3 1 8 0"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       HorizontalAlignment="Right"
                                                       VerticalAlignment="Center"
                                                       IsHitTestVisible="False">fa-angle-down</local:FontAwesomeIcon>

                                <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource TextBoxDisableForeground}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource TextBoxDisableBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxFocusedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false" >
                                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--<Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>-->
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type local:Toast}">
            <Setter Property="BorderBrush" Value="{StaticResource unMinneableSecondaryBrush}"/>
            <Setter Property="Background" Value="#FFFBFBFB"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Opacity="0.6" ShadowDepth="1" BlurRadius="8"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:Toast}">
                        <Border x:Name="back"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                MinHeight="100" MaxWidth="300">
                            <Grid>
                                <Button x:Name="PART_ToastButtonClose"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Right"
                                        Margin="10"
                                        FontFamily="/bsibhon;component/#Font Awesome 6 Pro Solid"
                                        >&#xf057;
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter SnapsToDevicePixels="True"/>
                                            <ControlTemplate.Triggers>

                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <TextBlock x:Name="PART_ToastIcon"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Width="24" Height="24" Margin="10"
                                           FontFamily="/bsibhon;component/#Font Awesome 6 Pro Solid"
                                           Text="fa-exclamation-circle"
                                           FontSize="24"
                                           TextAlignment="Center"/>
                                <TextBlock x:Name="PART_ToastTitle" VerticalAlignment="Top" Margin="40 10"></TextBlock>
                                <TextBlock x:Name="PART_ToastText" Margin="40 40 10 10"></TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="PART_ToastIcon" Property="Text" Value="&#xf05a;">
                                <Setter TargetName="PART_ToastIcon" Property="Foreground" Value="#FF007DFF"/>
                            </Trigger>
                            <Trigger SourceName="PART_ToastIcon" Property="Text" Value="&#xf06a;">
                                <Setter TargetName="PART_ToastIcon" Property="Foreground" Value="{StaticResource unMinneableBrush}"/>
                            </Trigger>
                            <Trigger SourceName="PART_ToastIcon" Property="Text" Value="&#xf057;">
                                <Setter TargetName="PART_ToastIcon" Property="Foreground" Value="#FFF44336"/>
                            </Trigger>
                            <Trigger SourceName="PART_ToastIcon" Property="Text" Value="&#xf071;">
                                <Setter TargetName="PART_ToastIcon" Property="Foreground" Value="#FFFEB806"/>
                            </Trigger>
                            <Trigger SourceName="PART_ToastIcon" Property="Text" Value="&#xf321;">
                                <Setter TargetName="PART_ToastIcon" Property="Foreground" Value="#FFFEB806"/>
                            </Trigger>
                            <Trigger SourceName="PART_ToastButtonClose" Property="IsMouseOver" Value="False">
                                <Setter TargetName="PART_ToastButtonClose" Property="Foreground" Value="#FFC70B0B"/>
                            </Trigger>
                            <Trigger SourceName="PART_ToastButtonClose" Property="IsMouseOver" Value="True">
                                <Setter TargetName="PART_ToastButtonClose" Property="Foreground" Value="#FFE01B1B"/>
                            </Trigger>
                            <Trigger SourceName="PART_ToastButtonClose" Property="IsPressed" Value="True">
                                <Setter TargetName="PART_ToastButtonClose" Property="Foreground" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ButtonDisableForeground}"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource ButtonDisableBorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid x:Name="grid">
        <TabControl x:Name="tabNavigator">
            <TabItem Header="Home">
                <StackPanel Margin="45">
                    <TextBlock Foreground="{StaticResource unMinneableBrush}">
                        <Run Foreground="{StaticResource unMinneableBrush}" FontWeight="SemiBold" FontSize="20"></Run>
                        <Bold FontFamily="/bsibhon;component/#Fredoka One" FontWeight="Bold" FontSize="30">
                            bsibhon
                        </Bold>
                    </TextBlock>
                    <TextBlock Margin="0,10,0,0" FontSize="15" TextWrapping="Wrap"><Bold>bsibhon</Bold> is an alternative software based on <Hyperlink NavigateUri="https://github.com/Psiphon-Labs/psiphon-tunnel-core" RequestNavigate="Hyperlink_RequestNavigate" TextDecorations="{x:Null}">Psiphon Tunnel Core</Hyperlink> that it is a censorship circumvention tool, designed to give access to the open Internet, past censors and firewalls. It is open source and developed in Toronto, Canada.</TextBlock>
                    <Button Style="{StaticResource WarningButtonStyle}" Margin="0,15,0,0" Click="home_continue_btn_Click">Continue</Button>
                    <StackPanel Margin="0,10,0,0">
                        <TextBlock TextWrapping="Wrap" FontSize="11">
                            <Bold>IMPORTANT:</Bold> Psiphon has servers in many different countries and regions.
                            Using a Psiphon server in a region close to your home country will generally provide a better network connection, but you may wish to access websites and services like you are virtually in a specific country or region.
                        </TextBlock>
                        <TextBlock Margin="0,3,0,0" TextWrapping="Wrap" FontSize="11">
                            Choosing the default <Bold>“Best Performance”</Bold> option allows Psiphon to automatically choose a server, which will generally result in the best network connection.
                        </TextBlock>
                        <TextBlock Margin="0,3,0,0" TextWrapping="Wrap" FontSize="11">
                            <Bold>The code of this software</Bold> can be audited at any time from <Hyperlink NavigateUri="https://github.com/gsirettito/bsibhon_wpf" RequestNavigate="Hyperlink_RequestNavigate" TextDecorations="{x:Null}">Github <local:FontAwesomeIcon x:Name="fontAwesomeIcon" FontPack="Brands">fa-github</local:FontAwesomeIcon></Hyperlink>.
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Hardware">
                <Grid Margin="45 45">
                    <StackPanel>
                        <TextBlock>
                        <Bold FontSize="16">Select server region</Bold>
                        </TextBlock>
                        <ComboBox x:Name="cbb_region"
                              Margin="0,5,0,0"
                              Height="40"
                              FontSize="16" SelectedIndex="0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <BulletDecorator>
                                        <BulletDecorator.Bullet>
                                            <Image RenderOptions.BitmapScalingMode="HighQuality" Source="{Binding Tag}" Stretch="None"/>
                                        </BulletDecorator.Bullet>
                                        <TextBlock Margin="3 0 0 0" Text="{Binding Text}" VerticalAlignment="Center"/>
                                    </BulletDecorator>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <TextBlock Tag="res/magic.png">Best Performance</TextBlock>
                            <TextBlock Tag="res/AT.png">Austria</TextBlock>
                            <TextBlock Tag="res/BE.png">Belgium</TextBlock>
                            <TextBlock Tag="res/BG.png">Bulgaria</TextBlock>
                            <TextBlock Tag="res/CA.png">Canada</TextBlock>
                            <TextBlock Tag="res/CH.png">Switzerland</TextBlock>
                            <TextBlock Tag="res/CZ.png">Czech Republic</TextBlock>
                            <TextBlock Tag="res/DE.png">Germany</TextBlock>
                            <TextBlock Tag="res/DK.png">Denmark</TextBlock>
                            <TextBlock Tag="res/EE.png">Estonia</TextBlock>
                            <TextBlock Tag="res/ES.png">Spain</TextBlock>
                            <TextBlock Tag="res/FL.png">Finland</TextBlock>
                            <TextBlock Tag="res/FR.png">France</TextBlock>
                            <TextBlock Tag="res/GB.png">United Kingdom</TextBlock>
                            <TextBlock Tag="res/HU.png">Hungary</TextBlock>
                            <TextBlock Tag="res/IE.png">Ireland</TextBlock>
                            <TextBlock Tag="res/IN.png">India</TextBlock>
                            <TextBlock Tag="res/JP.png">Japan</TextBlock>
                            <TextBlock Tag="res/LV.png">Latvia</TextBlock>
                            <TextBlock Tag="res/NL.png">Netherlands</TextBlock>
                            <TextBlock Tag="res/NO.png">Norway</TextBlock>
                            <TextBlock Tag="res/PL.png">Poland</TextBlock>
                            <TextBlock Tag="res/RO.png">Romania</TextBlock>
                            <TextBlock Tag="res/RS.png">Serbia</TextBlock>
                            <TextBlock Tag="res/SE.png">Sweden</TextBlock>
                            <TextBlock Tag="res/SG.png">Singapore</TextBlock>
                            <TextBlock Tag="res/SK.png">Slovakia</TextBlock>
                            <TextBlock Tag="res/US.png">United States</TextBlock>
                        </ComboBox>
                        <TextBlock Margin="0,10,0,0" FontSize="12" TextWrapping="Wrap">
                        Choosing the default <Bold>“Best Performance”</Bold> option allows Psiphon to automatically choose a server, which will generally result in the best network connection.
                        </TextBlock>
                        <CheckBox x:Name="chbx_split_own_region" IsChecked="True" Margin="0,15,0,0" FontSize="16">
                            <TextBlock TextWrapping="Wrap">Don't proxy websites within your country</TextBlock>
                        </CheckBox>
                        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap" FontSize="12">
                            If enabled, requests made to servers within your home country will not be tunneled through Psiphon.
                        </TextBlock>
                        <StackPanel Margin="0,10,0,0" Visibility="Collapsed">
                            <TextBlock Margin="0,3,0,0" TextWrapping="Wrap" FontSize="11">
                            <Bold>Psiphon Core Location (psiphon-tunnel-core.exe)</Bold>
                            </TextBlock>
                            <Border Height="40" CornerRadius="4" BorderThickness="1" BorderBrush="{StaticResource ButtonBorderBrush}">
                                <Grid>
                                    <TextBox x:Name="core_path_box" Margin="3,0,40,0" BorderBrush="{x:Null}">psiphon-tunnel-core.exe</TextBox>
                                    <Button Width="40" HorizontalAlignment="Right" Click="core_browse_btn_Click">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Foreground" Value="#dbdbdb"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <ContentControl x:Name="content"
                                                                            Content="{TemplateBinding Content}"
                                                                            Foreground="{TemplateBinding Foreground}"
                                                                            VerticalAlignment="Center"
                                                                            HorizontalAlignment="Center"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" Value="#363636"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <TextBlock>
                                        <Run Style="{StaticResource icon}">&#xf07c;</Run>
                                        </TextBlock>
                                    </Button>
                                </Grid>
                            </Border>
                            <TextBlock Visibility="Collapsed" Background="#fffbec" Padding="10,15" Margin="0,3,0,0" TextWrapping="Wrap" FontSize="11">
                            <Bold>Be sure to whitelist psiphon-tunnel-core.exe</Bold> if your
              Antivirus show an alert, the file is safe to keep, but is usually tagged as malware for being a mining software.
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                    <Button Style="{StaticResource WarningButtonStyle}"
                            VerticalAlignment="Bottom"
                            Click="region_next_btn_Click">Next</Button>
                </Grid>
            </TabItem>
            <TabItem Header="Upstream Proxy">
                <Grid Margin="45">
                    <TextBlock>
                        <Hyperlink TextDecorations="{x:Null}" Click="proxy_back_btn_Click">
                            <local:FontAwesomeIcon Icon="fa-arrow-left" Margin="0 0 0 -2"/>
                            <Run Text="  Back to select region"/>
                        </Hyperlink>
                    </TextBlock>
                    <StackPanel Margin="0 30">
                        <Grid IsEnabled="{Binding ElementName=chbx_no_proxy, Path=IsChecked, Converter={StaticResource EqualsToFalse}, ConverterParameter=True}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="75"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock>
                                <Bold FontSize="16">Hostname</Bold>
                                </TextBlock>
                                <TextBox x:Name="txt_hostname" Margin="0,5,0,0"></TextBox>
                            </StackPanel>
                            <StackPanel Grid.Column="1" Margin="5 0 0 0">
                                <TextBlock>
                        <Bold FontSize="16">Port</Bold>
                                </TextBlock>
                                <TextBox x:Name="txt_port" Margin="0,5,0,0"></TextBox>
                            </StackPanel>
                        </Grid>
                        <TextBlock Margin="0,15,0,0" >
                        <Bold FontSize="16">Username</Bold>
                        </TextBlock>
                        <TextBox x:Name="txt_username" Margin="0,5,0,0" IsEnabled="{Binding ElementName=chbx_no_proxy, Path=IsChecked, Converter={StaticResource EqualsToFalse}, ConverterParameter=True}"></TextBox>
                        <TextBlock Margin="0,15,0,0" >
                        <Bold FontSize="16">Password</Bold>
                        </TextBlock>
                        <PasswordBox x:Name="pwd_password"
                                     Margin="0,5,0,0"
                                     IsEnabled="{Binding ElementName=chbx_no_proxy, Path=IsChecked, Converter={StaticResource EqualsToFalse}, ConverterParameter=True}"></PasswordBox>
                        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap">
                        <Run>Only HTTP proxies that support HTTPS are allowed.</Run>
                        <Hyperlink NavigateUri="https://github/gsirettito/psi3_wpf"
                                   TextDecorations="{x:Null}">at our website.</Hyperlink>
                        </TextBlock>
                        <TextBlock Background="#fffbec" Visibility="Collapsed" Padding="10,15" Margin="0,3,0,0" TextWrapping="Wrap" FontSize="11">
                            <Bold>If your computer already has a proxy configured</Bold>, by default Psiphon will use that proxy when establishing a tunnel. You can override that behavior by specifying a proxy to use, or by specifying that no such “upstream proxy” should be used.
                        </TextBlock>
                        <CheckBox x:Name="chbx_no_proxy" IsChecked="True" Margin="0,15,0,0" FontSize="16">
                            <TextBlock TextWrapping="Wrap">Don't use upstream proxy</TextBlock>
                        </CheckBox>
                    </StackPanel>
                    <Button Style="{StaticResource WarningButtonStyle}"
                            VerticalAlignment="Bottom"
                            Click="proxy_next_btn_Click">Next</Button>
                </Grid>
            </TabItem>
            <TabItem Header="Status">
                <Grid Margin="45">
                    <TextBlock>
                        <Hyperlink TextDecorations="{x:Null}" Click="status_back_btn_Click">
                            <local:FontAwesomeIcon Icon="fa-arrow-left" Margin="0 0 0 -2"/>
                            <Run Text="  Back to configure proxy"/>
                        </Hyperlink>
                    </TextBlock>
                    <StackPanel Margin="0 30 0 0">
                        <Image Source="res/bsibhon_logo_green.png" Width="200" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform"/>
                        <TextBlock HorizontalAlignment="Center">
                            <Run Foreground="{StaticResource unMinneableBrush}" FontWeight="SemiBold" FontSize="20"></Run>
                            <Bold Foreground="{StaticResource unMinneableBrush}" FontFamily="/bsibhon;component/#Fredoka One" FontWeight="Bold" FontSize="30">bsibhon</Bold>
                        </TextBlock>
                        <TextBlock x:Name="tbk_status" HorizontalAlignment="Center" Margin="0 30 0 0"
                                   FontFamily="/bsibhon;component/#Fredoka One"
                                   FontWeight="Bold" FontSize="30"
                                   Foreground="{StaticResource PsiphonDisconnectedBrush}">DISCONNECTED
                        </TextBlock>
                        <TextBlock x:Name="tbk_status1" HorizontalAlignment="Center" Margin="0 0 0 0">
                            <Run x:Name="run_httpPort" Foreground="{StaticResource PsiphonDisconnectedBrush}" FontWeight="SemiBold" FontSize="16">Http Port:</Run>
                            <LineBreak/>
                            <Run x:Name="run_socksPort" Foreground="{StaticResource PsiphonDisconnectedBrush}" FontWeight="SemiBold" FontSize="16">Socks Port:</Run>
                        </TextBlock>
                    </StackPanel>
                    <Button x:Name="btn_state"
                            VerticalAlignment="Bottom"
                            Style="{StaticResource SuccessButtonStyle}"
                            Click="status_connect_btn_Click">Connect</Button>
                </Grid>
            </TabItem>
            <TabItem Header="Output">
                <TextBox x:Name="output_screen" IsReadOnly="True"
                         Margin="45"
                         FontFamily="Consolas"
                         Height="auto"
                         VerticalScrollBarVisibility="Auto"
                         HorizontalScrollBarVisibility="Auto"
                         VerticalAlignment="Stretch">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border x:Name="back"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="1"
                                                Background="{TemplateBinding Background}"
                                                Padding="5,2" SnapsToDevicePixels="True"
                                                UseLayoutRounding="True"
                                                d:DesignUseLayoutRounding="True">
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          RenderOptions.ClearTypeHint="Enabled"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          UseLayoutRounding="True"
                                                          d:DesignUseLayoutRounding="True"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </TabItem>
        </TabControl>
        <Border x:Name="toast" Visibility="Collapsed" Background="AntiqueWhite" CornerRadius="10" Margin="5" MinHeight="100" VerticalAlignment="Top">
            <Border.Effect>
                <DropShadowEffect Opacity="0.6" ShadowDepth="1" BlurRadius="8"/>
            </Border.Effect>
            <Grid>
                <Button x:Name="toast_btn_close" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10" Width="20" Height="20">X</Button>
                <TextBlock x:Name="toast_icon" VerticalAlignment="Center" HorizontalAlignment="Left" Width="24" Height="24" Margin="10"></TextBlock>
                <TextBlock x:Name="toast_title" VerticalAlignment="Top" Margin="40 10"></TextBlock>
                <TextBlock x:Name="toast_text" Margin="40 40 10 10"></TextBlock>
            </Grid>
        </Border>
        <local:Toast Visibility="Collapsed"/>
        <Border x:Name="controlButtons" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="15">
            <StackPanel Orientation="Horizontal">
                <local:FontAwesomeIcon Cursor="Hand" FontSize="16" Icon="fa-info-circle" Foreground="#4a4a4a" FontWeight="Regular" FontPack="Solid" Margin="8 0"/>
                <local:FontAwesomeIcon Cursor="Hand" FontSize="16" Icon="fa-times" Foreground="#4a4a4a" FontWeight="Regular" FontPack="Solid" MouseDown="fa_exitIcon_MouseDown"/>
            </StackPanel>
        </Border>
        <Border x:Name="controlButtons2" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="15">
            <StackPanel Orientation="Horizontal">
                <local:FontAwesomeIcon Cursor="Hand" FontSize="16"
                                       Icon="fa-file-alt"
                                       Foreground="#4a4a4a"
                                       FontWeight="Regular"
                                       FontPack="Solid" Margin="8 0"
                                       MouseDown="fa_logIcon_MouseDown"/>
                <local:FontAwesomeIcon Cursor="Hand" FontSize="16" Icon="fa-cog" Foreground="#4a4a4a" FontWeight="Regular" FontPack="Solid"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
